name: Build

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install -r config/requirements.txt

  unit_tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install test dependencies
        run: pip install -r config/requirements.txt
      - name: Run unit tests
        run: pytest tests/unit --junitxml=unit-test-results.xml

  integration_system_tests:
    name: Integration and System Tests
    runs-on: ubuntu-latest
    needs: unit_tests
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install test dependencies
        run: pip install -r config/requirements.txt
      - name: Run integration and system tests
        run: pytest tests/integrationTest --junitxml=integration-system-test-results.xml

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    needs: unit_tests
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install coverage dependencies
        run: pip install -r config/requirements.txt
      - name: Run coverage
        run: pytest --cov=. --cov-report=xml

  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest
    needs: [integration_system_tests, coverage]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install tox
        run: pip install tox
      - name: Run tox
        run: tox -e py
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_SCANNER_OPTS: "-Dsonar.python.coverage.reportPaths=coverage.xml"

  verify_aws:
    name: Verify AWS
    runs-on: ubuntu-latest
    needs: sonarqube
    steps:
      - name: Verify AWS credentials
        run: aws sts get-caller-identity
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.REGION_NAME }}

  deploy_lambda:
    name: Deploy AWS Lambda
    runs-on: ubuntu-latest
    needs: verify_aws
    steps:
      - uses: actions/checkout@v4
      - name: Deploy to AWS Lambda
        run: |
          aws lambda update-function-code \
            --function-name my-lambda-function \
            --zip-file fileb://function.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.REGION_NAME }}
          ENV: ${{ secrets.ENV }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
